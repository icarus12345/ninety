/**
 * @license angular-iscroll v3.5.1, 2017-06-13T11:03:21+0200
 * (c) 2017 Martin Thorsen Ranang <mtr@ranang.org>
 * License: MIT
 */
!function(e,r){"function"==typeof define&&define.amd?define(["iscroll","platform"],r):"object"==typeof exports?module.exports=r(require("iscroll"),require("platform")):e.angularIscroll=r(e.IScroll,e.platform)}(this,function(e,r){"use strict";/**
     * Compares two software version numbers (e.g. "1.7.1" or "1.2b").
     *
     * This function was born in http://stackoverflow.com/a/6832721.
     *
     * @param {string} v1 The first version to be compared.
     * @param {string} v2 The second version to be compared.
     * @param {object} [options] Optional flags that affect comparison behavior:
     * <ul>
     *     <li>
     *         <tt>lexicographical: true</tt> compares each part of the version strings lexicographically instead of
     *         naturally; this allows suffixes such as "b" or "dev" but will cause "1.10" to be considered smaller than
     *         "1.2".
     *     </li>
     *     <li>
     *         <tt>zeroExtend: true</tt> changes the result if one version string has less parts than the other. In
     *         this case the shorter string will be padded with "zero" parts instead of being considered smaller.
     *     </li>
     * </ul>
     * @returns {number|NaN}
     * <ul>
     *    <li>0 if the versions are equal</li>
     *    <li>a negative integer iff v1 < v2</li>
     *    <li>a positive integer iff v1 > v2</li>
     *    <li>NaN if either version string is in the wrong format</li>
     * </ul>
     *
     * @copyright by Jon Papaioannou (["john", "papaioannou"].join(".") + "@gmail.com")
     * @license This function is in the public domain. Do what you want with it, no strings attached.
     */
function n(e,r,n){function l(e){return(i?/^\d+[A-Za-z]*$/:/^\d+$/).test(e)}var i=n&&n.lexicographical,t=n&&n.zeroExtend,o=e.split("."),a=r.split(".");if(!o.every(l)||!a.every(l))return NaN;if(t){for(;o.length<a.length;)o.push("0");for(;a.length<o.length;)a.push("0")}i||(o=o.map(Number),a=a.map(Number));for(var c=0;c<o.length;++c){if(a.length==c)return 1;if(o[c]!=a[c])return o[c]>a[c]?1:-1}return o.length!=a.length?-1:0}function l(e){return"Chrome Mobile"===e.name}function i(e){return"Android Browser"===e.name&&n(e.os.version,"4.0.4")>=0}function t(e){return e.substring(0,1).toLocaleUpperCase()+e.substring(1)}function o(){function e(e){angular.isDefined(e.directive)&&angular.extend(t.directive,e.directive),angular.isDefined(e.iScroll)&&angular.extend(t.iScroll,e.iScroll)}function l(){return t}function i(e,l){function i(r){r||(s.useIScroll=!1),e.$emit(l.disabled)}function o(r){r||(s.useIScroll=!0),e.$emit(l.enabled)}function a(e){s.useIScroll^e?i(e):o(e)}function c(r){e.$emit(l.refresh,r)}var s={useIScroll:t.directive.initiallyEnabled,autoDetectedUseNativeScroll:v};return{defaults:t,state:s,versionCompare:n,platform:r,enable:o,disable:i,toggle:a,refresh:c}}i.$inject=["$rootScope","iScrollSignals"];var t={iScroll:{momentum:!0,mouseWheel:!0},directive:{initiallyEnabled:!v,asyncRefreshDelay:0,refreshInterval:!1,invokeApply:!1}};angular.forEach(d,function(e,r){this[r]=void 0},t.directive),this.useNativeScroll=v,this.platform=r,this.configureDefaults=e,this.getDefaults=l,this.$get=i}function a(e){e()}function c(r,n,l,i,t){function o(e,r){n(function(){e.refresh()},r.directive.asyncRefreshDelay,r.directive.invokeApply)}function c(n,t,c,s){function f(){null!==p&&l.cancel(p),angular.isDefined(n.iscrollInstance)&&delete n.iscrollInstance,S.destroy(),t.removeClass(u.on).addClass(u.off),t.children(".iscroll-scroller").attr("style",null),angular.forEach(y,a)}function v(){m&&(m=!1,o(S,s),m=!0)}function h(){m=!1}function g(){m=!0}var S=new e(t[0],s.iScroll),m=!0,p=null;angular.forEach(d,function(e,r){angular.isDefined(s.directive[r])&&S.on(e,s.directive[r])}),t.removeClass(u.off).addClass(u.on),angular.isDefined(c.iscrollInstance)&&(n.iscrollInstance=S),!1!==s.directive.asyncRefreshDelay&&o(S,s),S.on("scrollStart",h),S.on("scrollEnd",g),!1!==s.directive.refreshInterval&&(p=l(v,s.directive.refreshInterval,0,s.directive.invokeApply));var y=[r.$on(i.disabled,f),r.$on(i.refresh,v),n.$on("$destroy",f)];return S}function s(e,n,l){function o(){n.hasClass(u.on)||c(e,n,l,f)}function s(){angular.forEach(v,a)}var f={iScroll:angular.extend({},e.iscroll||{},t.defaults.iScroll),directive:angular.extend({},t.defaults.directive)};angular.forEach(f.iScroll,function(e,r){(t.defaults.directive.hasOwnProperty(r)||d.hasOwnProperty(r))&&(f.directive[r]=e,delete f.iScroll[r])});var v=[r.$on(i.enabled,o)];t.state.useIScroll?o():n.removeClass(u.on).addClass(u.off),e.$on("$destroy",s)}return{restrict:"A",link:s,scope:{iscroll:"=",iscrollInstance:"="}}}c.$inject=["$rootScope","$timeout","$interval","iScrollSignals","iScrollService"];var s={disabled:"iscroll:disabled",enabled:"iscroll:enabled",refresh:"iscroll:refresh"},u={on:"iscroll-on",off:"iscroll-off"},f=["beforeScrollStart","scrollCancel","scrollStart","scroll","scrollEnd","flick","zoomStart","zoomEnd"],d={},v=angular.isDefined(r)&&function(e){if("Opera Mini"===e.name)return!1;if("IE Mobile"===e.name)return n(e.version,"11.0")>=0;switch(e.os.family){case"Android":return l(e)||i(e);case"iOS":return n(e.version,"5.1")>=0;default:return!0}}(r);return angular.forEach(f,function(e){this["on"+t(e)]=e},d),angular.module("angular-iscroll",[]).directive("iscroll",c).provider("iScrollService",o).constant("iScrollSignals",s)});